name: CI - API and UI Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-api-tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Java & Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      # Step 3: Run API Tests
      - name: Run API Tests
        run: mvn test -P api-tests

      # Step 4: Upload Test Reports as Artifacts
      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: api-test-reports
          path: target/surefire-reports/

  run-ui-tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Java & Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Install Docker Compose (if missing)
        run: |
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

      # Step 3: Start Selenium Grid (Docker Compose)
      - name: Start Selenium Grid
        run: docker-compose up -d

      # Step 4: Wait for Selenium Grid to be ready
      - name: Wait for Selenium Grid
        run: |
          echo "Waiting for Selenium Grid to be ready..."
          for i in {1..30}; do
            if curl -s http://localhost:4444/status | grep '"ready": true'; then
              echo "Selenium Grid is ready!"
              exit 0
            fi
            echo "Waiting for 5 seconds..."
            sleep 5
          done
          echo "Selenium Grid failed to start"
          exit 1

      # Step 5: Run UI Tests in Firefox
      - name: Run UI Tests in Parallel (Firefox & Chrome) and Preserve Logs
        run: |
          mvn test -Dui.test.browser=firefox -P ui-tests > firefox.log 2>&1 &  # Run in background, save logs
          mvn test -Dui.test.browser=chrome -P ui-tests > chrome.log 2>&1 &   # Run in background, save logs
          wait  # Wait for both processes to finish
          cat firefox.log  # Display Firefox logs
          cat chrome.log   # Display Chrome logs

      # Step 6: Stop Selenium Grid
      - name: Stop Selenium Grid
        run: docker-compose down

      # Step 7: Upload Test Reports as Artifacts
      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-reports
          path: target/surefire-reports/